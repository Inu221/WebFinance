require("dotenv").config();
const express = require("express");
const mongoose = require("mongoose");
const cors = require("cors");
const cron = require("node-cron");

const connectDB = require("./db");
const assetRoutes = require("./routes/assets");
const updateCurrencyRates = require("./updateRates");

const app = express();
app.use(cors());
app.use(express.json());

app.use("/api/assets", assetRoutes);

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
connectDB()
  .then(() => {
    app.listen(5000, () => {
      console.log("‚úÖ Backend server running on http://localhost:5000");
    });

    // –î–ª—è —Ç–µ—Å—Ç–∞: –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–π 1 –º–∏–Ω—É—Ç—É
    cron.schedule("12 * * * *", async () => {
      console.log("üîÅ [CRON] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç —Å API –¶–ë –†–§...");
      try {
        await updateCurrencyRates();
        console.log("‚úÖ –ö—É—Ä—Å—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã.");
      } catch (err) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫—É—Ä—Å–æ–≤:", err.message);
      }
    });

    // –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞
    updateCurrencyRates().then(() =>
      console.log("üì• –ù–∞—á–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")
    );
  })
  .catch((err) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:", err.message);
  });
